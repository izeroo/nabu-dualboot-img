name: build

on:
  push:
  workflow_dispatch:

# Indicate that we are running in CI
env:
  WM_CI_BUILD: true

jobs:
  build-uefi:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: Project-Aloha/mu_aloha_platforms
          ref: main
          path: MU
      - name: Build UEFI
        run: |
          cd MU
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git submodule update --init --recursive
          sed -i '/"Kernel"/s/Conv/Reserv/' Platforms/SurfaceDuo1Pkg/Device/xiaomi-nabu/Library/PlatformMemoryMapLib/PlatformMemoryMapLib.c
          bash scripts/ci_setup.sh && ./build_uefi.py -d xiaomi-nabu
          find Build/*/ci_artifacts/ -type f -name 'SM8150_EFI_SB.fd' -exec cp '{}' ../SM8150_EFI_SB.fd ';'
          find Build/*/ci_artifacts/ -type f -name 'xiaomi-nabu_SB.img' -exec cp '{}' ../xiaomi-nabu_SB.img ';'
          find Build/*/ci_artifacts/ -type f -name 'SM8150_EFI_NOSB.fd' -exec cp '{}' ../SM8150_EFI_NOSB.fd ';'
          find Build/*/ci_artifacts/ -type f -name 'xiaomi-nabu_NOSB.img' -exec cp '{}' ../xiaomi-nabu_NOSB.img ';'
      - uses: actions/upload-artifact@v4
        with:
          name: SM8150_EFI_SB.fd
          path: |
            SM8150_EFI_SB.fd
      - uses: actions/upload-artifact@v4
        with:
          name: xiaomi-nabu_SB.img
          path: |
            xiaomi-nabu_SB.img
      - uses: actions/upload-artifact@v4
        with:
          name: SM8150_EFI_NOSB.fd
          path: |
            SM8150_EFI_NOSB.fd
      - uses: actions/upload-artifact@v4
        with:
          name: xiaomi-nabu_NOSB.img
          path: |
            xiaomi-nabu_NOSB.img
  build-installer:
    needs: [build-uefi]
    strategy:
      matrix:
        uefi-type: [SB, NOSB]
    runs-on: ubuntu-latest
    steps:
      - id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: 'YYYYMMDD'
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/download-artifact@v4
        with:
          name: SM8150_EFI_${{ matrix.uefi-type }}.fd
      - name: Build Zip Installer (${{ matrix.uefi-type }})
        run: |
          mv SM8150_EFI_${{ matrix.uefi-type }}.fd Flashable_UEFI_Installer/SM8150_EFI.fd
          wget -nv "https://github.com/Project-Aloha/DualBootKernelPatcher/releases/download/v1.2.0.0/DualBootKernelPatcher-Linux-arm64.zip"
          unzip DualBootKernelPatcher-Linux-arm64.zip
          mv DualBootKernelPatcher Flashable_UEFI_Installer/DualBootKernelPatcher
          chmod +x Flashable_UEFI_Installer/DualBootKernelPatcher
          wget -nv "https://github.com/Project-Aloha/DualBootKernelPatcher/releases/download/v1.2.0.0/Shellcodes.zip"
          unzip Shellcodes.zip
          mv ShellCode.Nabu.bin Flashable_UEFI_Installer/ShellCode.Nabu.bin
          wget -nv "https://github.com/Project-Aloha/DualBootKernelPatcher/releases/download/v1.2.0.0/Config.zip"
          unzip Config.zip
          mv Config/DualBoot.Sm8150.cfg Flashable_UEFI_Installer/DualBoot.Sm8150.cfg
          chmod +x Flashable_UEFI_Installer/DualBootKernelPatcher
          cd Flashable_UEFI_Installer
          ./pack.sh
          mv installer.zip installer_${{ matrix.uefi-type }}.zip
      - uses: actions/upload-artifact@v4
        with:
          name: installer_${{ matrix.uefi-type }}.zip
          path: |
            Flashable_UEFI_Installer/installer_${{ matrix.uefi-type }}.zip
      - name: Release assets
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
          target_commitish: ${{ github.sha }}
          name: DualBoot UEFI Installer (${{ steps.time.outputs.time }})
          body_path: README.md
          draft: false
          prerelease: false
          files: |
            Flashable_UEFI_Installer/installer_${{ matrix.uefi-type }}.zip

